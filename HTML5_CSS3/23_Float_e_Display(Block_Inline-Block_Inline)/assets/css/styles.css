* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.grid {
    padding: 15px;
}

/*o pseudoelemento after, você força a grid a saber o tamanho dela*/
.grid::after {
    content: "";
    /*Tem que dizer especificamento o tipo de display que você quer*/
    display: block;
    /*A grid se limpa automaticamente, consequentemente os próximos elementos vão ter as laterais limpas.*/
    clear: both;
}

.grid .col {
    /*Display é uma das propriedades mais importantes*/
    /*Propriedade display vem block por padrão*/

    /*Existe também o display: inline-block, essa propriedade é muito esquisita porque ela também tem espaço, ela é uma mesclagem da inline com a block*/

    /*Float: vai ocupar somente o espaço dele e vai liberar o espaço para os outros objetos ocuparem*/
    /*Quando se utiliza a propriedade float dentro de elementos filhos, esses elementos não computam tamanho, é como se eles não tivesse tamanho nenhum.*/
    display: block;
    width: 33.33%;
    height: 300px;
    float: left;
    margin: 30px;
    padding: 15px;

}

/*Ele limpa a esquerda e então começa em uma nova linha*/
p {
    clear: right;
}

.grid .col-content {
    width: 100%;
    height: 100%;
    background-color: red;
}